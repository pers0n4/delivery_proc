/**
 * @file main.pc
 * @author Dong-Young Kim (31337.persona@gmail.com)
 * @brief
 * @version 0.1.0
 * @date 2021-11-21
 *
 * @copyright Copyright (c) 2021
 *
 */

#include <sqlca.h>
#include <sqlcpr.h>
#include <sqlda.h>
#include <stdio.h>
#include <stdio_ext.h>
#include <stdlib.h>
#include <string.h>

#include "database.h"

struct {
  VARCHAR username[20];
  VARCHAR phone_number[14];
  VARCHAR address[80];
  VARCHAR user_type[8];
} user;

// TODO: separate menu cateogry
void ShowMenu() {
  printf("1. 로그인\n");
  printf("2. 회원 가입\n");
  puts("");

  printf("1. 가게 등록\n");
  printf("2. 가게 선택\n");
  printf("3. 가게 수정\n");
  puts("");

  printf("1. 메뉴 등록\n");
  printf("2. 메뉴 수정\n");
  printf("3. 메뉴 삭제\n");
  puts("");

  printf("1. 주문하기\n");
  printf("2. 주문 조회\n");
  printf("3. 리뷰\n");
}

int SignUp() {
  EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR username[21];
  VARCHAR password[41];
  VARCHAR password_confirm[41];
  VARCHAR phone_number[15];
  VARCHAR address[81];
  VARCHAR user_type[9];
  EXEC SQL END DECLARE SECTION;

  printf("아이디를 입력하세요: ");
  fgets((char *)username.arr, sizeof(username.arr), stdin);
  username.arr[strlen((char *)username.arr) - 1] = '\0';
  username.len = strlen((char *)username.arr);
  if (username.len == 0) {
    printf("아이디를 입력하세요.\n");
    return -201;
  }

  printf("비밀번호를 입력하세요: ");
  fgets((char *)password.arr, sizeof(password.arr), stdin);
  password.arr[strlen((char *)password.arr) - 1] = '\0';
  password.len = strlen((char *)password.arr);
  if (password.len == 0) {
    printf("비밀번호를 입력하세요.\n");
    return -202;
  }

  printf("비밀번호를 한 번 더 입력하세요: ");
  fgets((char *)password_confirm.arr, sizeof(password_confirm.arr), stdin);
  password_confirm.arr[strlen((char *)password_confirm.arr) - 1] = '\0';
  password_confirm.len = strlen((char *)password_confirm.arr);
  if (strcmp((char *)password.arr, (char *)password_confirm.arr)) {
    printf("비밀번호가 일치하지 않습니다.\n");
    return -202;
  }

  printf("전화번호를 입력하세요: ");
  fgets((char *)phone_number.arr, sizeof(phone_number.arr), stdin);
  phone_number.arr[strlen((char *)phone_number.arr) - 1] = '\0';
  phone_number.len = strlen((char *)phone_number.arr);
  if (phone_number.len == 0) {
    printf("전화번호를 입력하세요.\n");
    return -203;
  }

  printf("주소를 입력하세요: ");
  fgets((char *)address.arr, sizeof(address.arr), stdin);
  address.arr[strlen((char *)address.arr) - 1] = '\0';
  address.len = strlen((char *)address.arr);
  if (address.len == 0) {
    printf("주소를 입력하세요.\n");
    return -204;
  }

  printf("회원 유형을 입력하세요 [Consumer / Provider]: ");
  fgets((char *)user_type.arr, sizeof(user_type.arr), stdin);
  printf("%s\n", user_type.arr);
  if (user_type.len == 0 || !strcmp((char *)user_type.arr, "consumer") ||
      !strncmp((char *)user_type.arr, "c", 1) ||
      !strncmp((char *)user_type.arr, "C", 1)) {
    user_type.len = strlen(strcpy((char *)user_type.arr, "consumer"));
  } else if (!strcmp((char *)user_type.arr, "provider") ||
             !strncmp((char *)user_type.arr, "p", 1) ||
             !strncmp((char *)user_type.arr, "P", 1)) {
    user_type.len = strlen(strcpy((char *)user_type.arr, "provider"));
  } else {
    printf("회원 유형을 입력하세요.\n");
    return -205;
  }
  printf("%s\n", user_type.arr);

  // clang-format off
  EXEC SQL INSERT
    INTO users(user_id,
               username,
               password,
               phone_number,
               address,
               user_type)
    VALUES (users_seq.nextval,
            :username,
            :password,
            :phone_number,
            :address,
            :user_type);
  // clang-format on

  EXEC SQL COMMIT WORK;
  printf("\n회원가입이 완료되었습니다.\n");
  return 0;
}

int SignIn() {
  EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR username[21];
  VARCHAR password[41];
  EXEC SQL END DECLARE SECTION;

  printf("아이디를 입력하세요: ");
  fgets((char *)username.arr, sizeof(username.arr), stdin);
  username.arr[strlen((char *)username.arr) - 1] = '\0';
  username.len = strlen((char *)username.arr);
  if (username.len == 0) {
    printf("아이디를 입력하세요.\n");
    return -211;
  }

  printf("비밀번호를 입력하세요: ");
  fgets((char *)password.arr, sizeof(password.arr), stdin);
  password.arr[strlen((char *)password.arr) - 1] = '\0';
  password.len = strlen((char *)password.arr);
  if (password.len == 0) {
    printf("비밀번호를 입력하세요.\n");
    return -212;
  }

  // clang-format off
  EXEC SQL SELECT username, phone_number, address, user_type
    INTO :user
    FROM users
    WHERE username = :username
    AND password = :password;
  // clang-format on

  user.username.arr[user.username.len] = '\0';
  user.phone_number.arr[user.phone_number.len] = '\0';
  user.address.arr[user.address.len] = '\0';
  user.user_type.arr[user.user_type.len] = '\0';

  EXEC SQL WHENEVER NOT FOUND DO break;

  printf("\n%s님 환영합니다.\n", user.username.arr);
  printf("전화번호: %s\n", user.phone_number.arr);
  printf("주소: %s\n", user.address.arr);
  printf("회원 유형: %s\n", user.user_type.arr);

  return 0;
}

int main(int argc, const char *argv[]) {
  ConnectDatabase(argc, argv);

  int select_menu = -1;
  int return_code = 0;
  while (select_menu != 0 && return_code == 0) {
    printf("\n현재 로그인된 유저: %s\n\n", user.username.arr);

    ShowMenu();

    scanf("%d", &select_menu);
    __fpurge(stdin);

    switch (select_menu) {
      case 1:
        return_code = SignIn();
        printf("\n%s님 환영합니다.\n", user.username.arr);
        break;
      case 2:
        return_code = SignUp();
        break;
      default:
        break;
    }
  }

  return 0;
}
